@page
@model InventoryManagement.Pages.Add_New_Product.IndexModel
@{
}

<div class="bodyFrame">
   
    <div class="page-header">
        <h2 class="action-name">ADD NEW PRODUCT</h2>
    </div>
    <form class="input-form" method="post">
        <div class="inputField">
            <label for="productId">Product ID</label>
            <input type="text" name="productId" value="@Model.ProductId" />
        </div>

        <div class="inputField">
            <label for="productName">Product Name</label>
            <input type="text" name="productName" value="@Model.ProductName" />
        </div>

        <div class="inputField">
            <label for="productCategory">Product Category</label>
            <input type="text" name="productCategory" value="@Model.ProductCategory" />
        </div>

        <div class="inputField">
            <label for="manufacturer">Manufacturer</label>
            <input type="text" name="manufacturer" value="@Model.Manufacturer" />
        </div>

        <div class="inputField">
            <label for="yearOfManufacture">Year of Manufacture</label>
            <input type="number" name="yearOfManufacture" value="@Model.YearOfManufacture" />
        </div>

        <div class="inputField">
            <label for="expDate">Expiration Date</label>
            <input type="date" name="expirationDate" placeholder="format: mm-dd-yyyy" value="@Model.ExpirationDate.ToShortDateString()" />
        </div>

        <div class="inputField">
            <label for="quantity">Quantity</label>
            <input type="number" name="quantity" value="@Model.Quantity" />
        </div>

        <div class="inputField">
            <label for="price">Price</label>
            <input type="number" name="price" value="@Model.Price" />
        </div>

        <div class="inputField">
            <label for="price">Unit of Measurement</label>
            <input type="text" name="unitOfMeasurement" value="@Model.UnitOfMeasurement" />
        </div>

        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <p class="info-text-error">@Model.ErrorMessage</p>
        }

        <input class="submit-button" type="submit" value="Add Product">
    </form>

</div>

@section Styling{
    <style>
        .bodyFrame {
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
            align-items: center;
            height: 90vh;
        }

        .page-header {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .action-name {
            font-weight: bold;
            color: dodgerblue;
        }

        .info-text-error {
            background-color: red;
            color: white;
        }

        .info-text-approved {
            background-color: forestgreen;
            color: white;
        }

        .input-form {
            width: 55%;
            display: flex;
            flex-direction: column;
            justify-content: space-evenly;
            align-items: center;
            height: 80%;
        }

        .inputField {
            width: 100%;
            display: flex;
            justify-content: space-between;
        }

            .inputField > input {
                width: 60%;
                padding-left: 1rem;
            }

        label {
            font-weight: bold;
        }

        input {
            border-radius: 8px;
        }

            input:focus {
                background-color: azure
            }

        .submit-button {
            width: 100%;
            color: white;
            background-color: deepskyblue;
            font-weight: bold;
            font-size: medium;
            height: 40px;
            margin-top: 30px;
        }

            .submit-button:hover {
                background-color: blue;
            }
    </style>
}