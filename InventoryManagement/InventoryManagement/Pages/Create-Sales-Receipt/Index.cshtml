@page
@using Services.Constants;
@using Services.Extensions;
@model InventoryManagement.Pages.Create_Sales_Receipt.IndexModel
@{
}

<div>
    @if (Model.Products == null)
    {
        <p>Cannot create sales receipts as there is no product instock or all products are out of date and cannot be sale...</p>
    }
    else
    {
        <h2 style="padding: 1rem 0">Create Sales Receipt</h2>

        <form method="POST">
            <div class="inputField new">
                <label for="salesReceiptId">Enter Sales Receipt ID</label>
                <input type="text" name="salesReceiptId" value="@Model.SalesReceiptId" />
            </div>

            <h3 style="padding: 1rem 0; color: slategrey">And quantity for each product...</h3>
            <table>
                <tr>
                    <th>Product Name</th>
                    <th>Manufacturer</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Unit of Measurement</th>
                    <th>Expiration Status</th>
                </tr>
                @for (var i = 0; i < Model.Products.Count; i++)
                {
                    <tr>
                        <td>@Model.Products[i].Name</td>
                        <td>@Model.Products[i].Manufacturer</td>
                        <td>@Model.Products[i].Price</td>
                        <td>
                            @if (Model.Products[i].Quantity >= 0)
                            {
                                <input type="number" name="quantities[@i]" />
                            }
                            else
                            {
                                <input type="number" style="background-color: red" name="quantities[@i]" value="" />
                            }
                        </td>
                        <td>@Model.Products[i].UnitOfMeasurement</td>
                        <td>
                            @{var expirationStatus = DateTimeExtensions.CheckProductExpirationStatus(Model.Products[i].ExpDate);}

                            @if (expirationStatus == ExpirationStatus.EXPIRED)
                            {
                                <span class="expiration-color-code" style="color: red">Expired</span>
                            }
                            else if (expirationStatus == ExpirationStatus.NEAR_EXPIRATION_7)
                            {
                                <span class="expiration-color-code" style="color: orangered">Expires Soon</span>
                            }
                            else if (expirationStatus == ExpirationStatus.NEAR_EXPIRATION_14)
                            {
                                <span class="expiration-color-code" style="color: gold">Expires within 14 days</span>
                            }
                            else
                            {
                                <span class="expiration-color-code" style="color: green">Looks good!</span>
                            }
                        </td>
                    </tr>
                }
            </table>

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <p class="info-text">@Model.ErrorMessage</p>
            }

            <div class="action-button-wrapper">
                <input type="submit" value="Create Sales Receipt" class="action-button" />
                <a href="/sales-receipt" class="action-button dangerous">
                    Cancel
                </a>
            </div>
        </form>
    }
</div>

@section Styling{
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }

        td, th {
            border: 1px solid #dddddd;
            text-align: center;
            padding: 8px;
        }

        tr:first-child, tr:first-child:hover {
            background-color: deepskyblue;
            color: white;
        }

        tr:hover {
            background-color: #dddddd;
        }

        .create-sale-receipt {
            background-color: forestgreen;
        }

        .expiration-color-code{
            font-weight: bold;
        }

        .inputField.new {
            font-size: 1.5rem;
            background-color: forestgreen;
            color: white;
            font-weight: bold;
            border-radius: 8px;
            padding-left: 1rem;
            width: 100%;
            display: flex;
            justify-content: space-between;
        }

            .inputField.new > input {
                width: 70%;
                padding-left: 1rem;
                line-height: 1.5rem;
                font-weight: bold;
                border-radius: 8px;
            }

        .info-text {
            text-align: center;
            color: red;
            font-size: 1.5rem;
            font-weight: bold;
        }

        .action-button-wrapper {
            display: flex;
            justify-content: space-around;
            width: 100%;
        }

        .action-button {
            text-decoration: none;
            display: inline-block;
            line-height: 1.5rem;
            background-color: deepskyblue;
            color: white;
            text-align: center;
            border-radius: 4px;
            font-weight: bold;
            padding: 8px;
            width: 15rem;
        }

        a.action-button {
            text-decoration: none;
            color: white
        }

        .action-button.dangerous {
            background-color: red;
        }

    </style>
}